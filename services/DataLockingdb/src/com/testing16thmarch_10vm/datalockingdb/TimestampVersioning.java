/*Copyright (c) 2019-2020 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing16thmarch_10vm.datalockingdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * TimestampVersioning generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`TIMESTAMP_VERSIONING`")
public class TimestampVersioning implements Serializable {

    private Integer id;
    private String stringcol;
    private Time timecol;
    private Timestamp timestampversion;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`STRINGCOL`", nullable = true, length = 255)
    public String getStringcol() {
        return this.stringcol;
    }

    public void setStringcol(String stringcol) {
        this.stringcol = stringcol;
    }

    @Column(name = "`TIMECOL`", nullable = true)
    public Time getTimecol() {
        return this.timecol;
    }

    public void setTimecol(Time timecol) {
        this.timecol = timecol;
    }

    @Column(name = "`TIMESTAMPVERSION`", nullable = true)
    public Timestamp getTimestampversion() {
        return this.timestampversion;
    }

    public void setTimestampversion(Timestamp timestampversion) {
        this.timestampversion = timestampversion;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TimestampVersioning)) return false;
        final TimestampVersioning timestampVersioning = (TimestampVersioning) o;
        return Objects.equals(getId(), timestampVersioning.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}