/*Copyright (c) 2019-2020 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing16thmarch_10vm.datalockingdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Version;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * Versioncoltable generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`VERSIONCOLTABLE`")
public class Versioncoltable implements Serializable {

    private Integer pkid;
    private Byte bytecol;
    private Short shortcol;
    private Long longcol;
    private Integer intcol;
    private Float floatcol;
    private Double doublecol;
    private BigInteger bigintcol;
    private BigDecimal bigdeccol;
    private Character charcol;
    private String stringcol;
    private String textcol;
    private String clobcol;
    private Date datecol;
    private Time timecol;
    private LocalDateTime datetimecol;
    private Timestamp timestampcol;
    private Boolean booleancol;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] blobcol;
    private Integer version;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`PKID`", nullable = false, scale = 0, precision = 10)
    public Integer getPkid() {
        return this.pkid;
    }

    public void setPkid(Integer pkid) {
        this.pkid = pkid;
    }

    @Column(name = "`BYTECOL`", nullable = true, scale = 0, precision = 3)
    public Byte getBytecol() {
        return this.bytecol;
    }

    public void setBytecol(Byte bytecol) {
        this.bytecol = bytecol;
    }

    @Column(name = "`SHORTCOL`", nullable = true, scale = 0, precision = 5)
    public Short getShortcol() {
        return this.shortcol;
    }

    public void setShortcol(Short shortcol) {
        this.shortcol = shortcol;
    }

    @Column(name = "`LONGCOL`", nullable = true, scale = 8, precision = 18)
    public Long getLongcol() {
        return this.longcol;
    }

    public void setLongcol(Long longcol) {
        this.longcol = longcol;
    }

    @Column(name = "`INTCOL`", nullable = true, scale = 0, precision = 10)
    public Integer getIntcol() {
        return this.intcol;
    }

    public void setIntcol(Integer intcol) {
        this.intcol = intcol;
    }

    @Column(name = "`FLOATCOL`", nullable = true, scale = 4, precision = 8)
    public Float getFloatcol() {
        return this.floatcol;
    }

    public void setFloatcol(Float floatcol) {
        this.floatcol = floatcol;
    }

    @Column(name = "`DOUBLECOL`", nullable = true, scale = 8, precision = 18)
    public Double getDoublecol() {
        return this.doublecol;
    }

    public void setDoublecol(Double doublecol) {
        this.doublecol = doublecol;
    }

    @Column(name = "`BIGINTCOL`", nullable = true, scale = 0, precision = 19)
    public BigInteger getBigintcol() {
        return this.bigintcol;
    }

    public void setBigintcol(BigInteger bigintcol) {
        this.bigintcol = bigintcol;
    }

    @Column(name = "`BIGDECCOL`", nullable = true, scale = 15, precision = 35)
    public BigDecimal getBigdeccol() {
        return this.bigdeccol;
    }

    public void setBigdeccol(BigDecimal bigdeccol) {
        this.bigdeccol = bigdeccol;
    }

    @Column(name = "`CHARCOL`", nullable = true, length = 1)
    public Character getCharcol() {
        return this.charcol;
    }

    public void setCharcol(Character charcol) {
        this.charcol = charcol;
    }

    @Column(name = "`STRINGCOL`", nullable = true, length = 255)
    public String getStringcol() {
        return this.stringcol;
    }

    public void setStringcol(String stringcol) {
        this.stringcol = stringcol;
    }

    @Column(name = "`TEXTCOL`", nullable = true, length = 2147483647)
    public String getTextcol() {
        return this.textcol;
    }

    public void setTextcol(String textcol) {
        this.textcol = textcol;
    }

    @Column(name = "`CLOBCOL`", nullable = true, length = 2147483647)
    public String getClobcol() {
        return this.clobcol;
    }

    public void setClobcol(String clobcol) {
        this.clobcol = clobcol;
    }

    @Column(name = "`DATECOL`", nullable = true)
    public Date getDatecol() {
        return this.datecol;
    }

    public void setDatecol(Date datecol) {
        this.datecol = datecol;
    }

    @Column(name = "`TIMECOL`", nullable = true)
    public Time getTimecol() {
        return this.timecol;
    }

    public void setTimecol(Time timecol) {
        this.timecol = timecol;
    }

    @Column(name = "`DATETIMECOL`", nullable = true)
    public LocalDateTime getDatetimecol() {
        return this.datetimecol;
    }

    public void setDatetimecol(LocalDateTime datetimecol) {
        this.datetimecol = datetimecol;
    }

    @Column(name = "`TIMESTAMPCOL`", nullable = true)
    public Timestamp getTimestampcol() {
        return this.timestampcol;
    }

    public void setTimestampcol(Timestamp timestampcol) {
        this.timestampcol = timestampcol;
    }

    @Column(name = "`BOOLEANCOL`", nullable = true)
    public Boolean getBooleancol() {
        return this.booleancol;
    }

    public void setBooleancol(Boolean booleancol) {
        this.booleancol = booleancol;
    }

    @Column(name = "`BLOBCOL`", nullable = true)
    public byte[] getBlobcol() {
        return this.blobcol;
    }

    public void setBlobcol(byte[] blobcol) {
        this.blobcol = blobcol;
    }

    @Column(name = "`VERSION`", nullable = true, scale = 0, precision = 10)
	@Version
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Versioncoltable)) return false;
        final Versioncoltable versioncoltable = (Versioncoltable) o;
        return Objects.equals(getPkid(), versioncoltable.getPkid());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPkid());
    }
}