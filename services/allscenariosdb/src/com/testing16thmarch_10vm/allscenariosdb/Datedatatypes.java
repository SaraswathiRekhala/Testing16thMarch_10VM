/*Copyright (c) 2019-2020 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing16thmarch_10vm.allscenariosdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.sql.Time;
import java.time.LocalDateTime;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Datedatatypes generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`DATEDATATYPES`")
public class Datedatatypes implements Serializable {

    private Integer pkid;
    private Date datecol;
    private Time timecol;
    private LocalDateTime datetimecol;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`PKID`", nullable = false, scale = 0, precision = 10)
    public Integer getPkid() {
        return this.pkid;
    }

    public void setPkid(Integer pkid) {
        this.pkid = pkid;
    }

    @Column(name = "`DATECOL`", nullable = true)
    public Date getDatecol() {
        return this.datecol;
    }

    public void setDatecol(Date datecol) {
        this.datecol = datecol;
    }

    @Column(name = "`TIMECOL`", nullable = true)
    public Time getTimecol() {
        return this.timecol;
    }

    public void setTimecol(Time timecol) {
        this.timecol = timecol;
    }

    @Column(name = "`DATETIMECOL`", nullable = true)
    public LocalDateTime getDatetimecol() {
        return this.datetimecol;
    }

    public void setDatetimecol(LocalDateTime datetimecol) {
        this.datetimecol = datetimecol;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Datedatatypes)) return false;
        final Datedatatypes datedatatypes = (Datedatatypes) o;
        return Objects.equals(getPkid(), datedatatypes.getPkid());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPkid());
    }
}