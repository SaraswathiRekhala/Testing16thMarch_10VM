/*Copyright (c) 2019-2020 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testing16thmarch_10vm.cascadedb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Version;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * TimestampLock generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`TIMESTAMP_LOCK`")
public class TimestampLock implements Serializable {

    private Integer id;
    private Date datecol;
    private Boolean booleancol;
    @JsonProperty(access = Access.READ_ONLY)
    private byte[] blobcol;
    private Timestamp timestamplocking;

    @Id
    @SequenceGenerator(name = "generator", sequenceName = "`TIMESTAMP_LOCK_ID_seq`" , allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "generator")
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`DATECOL`", nullable = true)
    public Date getDatecol() {
        return this.datecol;
    }

    public void setDatecol(Date datecol) {
        this.datecol = datecol;
    }

    @Column(name = "`BOOLEANCOL`", nullable = true)
    public Boolean getBooleancol() {
        return this.booleancol;
    }

    public void setBooleancol(Boolean booleancol) {
        this.booleancol = booleancol;
    }

    @Column(name = "`BLOBCOL`", nullable = true)
    public byte[] getBlobcol() {
        return this.blobcol;
    }

    public void setBlobcol(byte[] blobcol) {
        this.blobcol = blobcol;
    }

    @Column(name = "`TIMESTAMPLOCKING`", nullable = true)
	@Version
    public Timestamp getTimestamplocking() {
        return this.timestamplocking;
    }

    public void setTimestamplocking(Timestamp timestamplocking) {
        this.timestamplocking = timestamplocking;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof TimestampLock)) return false;
        final TimestampLock timestampLock = (TimestampLock) o;
        return Objects.equals(getId(), timestampLock.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}